[
    {
        "id": "dba0e1f7a72441bb",
        "type": "tab",
        "label": "KU16-Controller",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1258333c09ec2d33",
        "type": "subflow",
        "name": "Sensors Module",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 680,
                "y": 160,
                "wires": [
                    {
                        "id": "6e0ca5208b698113",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "license": "MIT"
        },
        "color": "#3FADB5",
        "icon": "node-red/join.svg"
    },
    {
        "id": "931cf19a33392f64",
        "type": "subflow",
        "name": "getSlotByHn",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 140,
                "wires": [
                    {
                        "id": "4eec774c71ef2b5b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 140,
                "wires": [
                    {
                        "id": "8a26e8ef80a235a8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#3FADB5",
        "icon": "node-red/leveldb.svg"
    },
    {
        "id": "0520fb9dbb58c1ea",
        "type": "subflow",
        "name": "OnSlotClosed",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 180,
                "wires": [
                    {
                        "id": "b84f0152ef306511"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 380,
                "y": 40,
                "wires": [
                    {
                        "id": "b84f0152ef306511",
                        "port": 0
                    }
                ]
            },
            {
                "x": 760,
                "y": 20,
                "wires": [
                    {
                        "id": "974f871024b6f676",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1080,
                "y": 200,
                "wires": [
                    {
                        "id": "be5ee1e8c214ae38",
                        "port": 0
                    },
                    {
                        "id": "b84f0152ef306511",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#3FADB5",
        "icon": "font-awesome/fa-compress"
    },
    {
        "id": "ad490413aec60dd0",
        "type": "subflow",
        "name": "SendSlotState",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 240,
                "wires": [
                    {
                        "id": "769610c351dfe2fc"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#3FADB5",
        "icon": "node-red/bridge.svg"
    },
    {
        "id": "fee7dc34ed95daa4",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "28e26f9a02268001",
        "type": "subflow",
        "name": "KU16-Controller",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "05697e61e7f516ca",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "19200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "0x02",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "8",
        "bin": "bin",
        "out": "count",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "8fbde230d2e3fc73",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7b1f540ae7b80b30",
        "type": "sqlitedb",
        "db": "/home/nonthasak.l/Desktop/smc_2/db/slot.db",
        "mode": "RWC"
    },
    {
        "id": "9925fa0ca8f5eb06",
        "type": "serial-port",
        "z": "1258333c09ec2d33",
        "serialport": "/dev/ttyUSB1",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "6e0ca5208b698113",
        "type": "serial in",
        "z": "1258333c09ec2d33",
        "name": "",
        "serial": "9925fa0ca8f5eb06",
        "x": 410,
        "y": 160,
        "wires": [
            [
                "6671b516428e2033"
            ]
        ]
    },
    {
        "id": "6671b516428e2033",
        "type": "file",
        "z": "1258333c09ec2d33",
        "name": "log",
        "filename": "/smc/logs/sensor-log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 590,
        "y": 300,
        "wires": [
            [
                "4911f64423bab52f"
            ]
        ]
    },
    {
        "id": "4911f64423bab52f",
        "type": "debug",
        "z": "1258333c09ec2d33",
        "name": "logs-info",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 300,
        "wires": []
    },
    {
        "id": "4eec774c71ef2b5b",
        "type": "function",
        "z": "931cf19a33392f64",
        "name": "SQL",
        "func": "msg.topic = `SELECT * FROM slot WHERE hn=${msg.payload.hn}`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 280,
        "wires": [
            [
                "b778a0ff907bf162"
            ]
        ],
        "info": "# Query String Sender\n\nComponent that build the query string to makes query to the database"
    },
    {
        "id": "b778a0ff907bf162",
        "type": "sqlite",
        "z": "931cf19a33392f64",
        "mydb": "7b1f540ae7b80b30",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "db",
        "x": 350,
        "y": 260,
        "wires": [
            [
                "8a26e8ef80a235a8"
            ]
        ],
        "info": "# Database Instance [Dispensing]\n\nDatabase Instance Node for exeuting the SQL\noperation.\n\nThis instance is for querying any slot which has \nthe HN from the payload."
    },
    {
        "id": "8a26e8ef80a235a8",
        "type": "function",
        "z": "931cf19a33392f64",
        "name": "GET",
        "func": "if(msg.payload[0] != undefined) {\n    msg.payload = { slot: msg.payload[0].slotId, ...msg.payload[0] };\n    return msg;  \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 280,
        "wires": [
            []
        ],
        "info": "# Dispensing Data Filter and Parser\n\nThis module will pass the founded data to the Executor node\nfor executing the slot opening.\n\nso it only send the message only when has the data from database node"
    },
    {
        "id": "b84f0152ef306511",
        "type": "switch",
        "z": "0520fb9dbb58c1ea",
        "name": "O/C",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "31",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "31",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "4d76fa68db626f6b"
            ],
            []
        ],
        "info": "\n\n5 slots\n\nclose state will be\n\n31\n\nslot 1 open\n\nslot 2 open\n\nslot 3 open\n\nslot 4 open\n\nslot 5 open\n\nTODO: make it dynamic"
    },
    {
        "id": "4d76fa68db626f6b",
        "type": "function",
        "z": "0520fb9dbb58c1ea",
        "name": "get-opening",
        "func": "msg.topic = `SELECT * FROM slot WHERE opening=true`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 100,
        "wires": [
            [
                "974f871024b6f676"
            ]
        ]
    },
    {
        "id": "974f871024b6f676",
        "type": "sqlite",
        "z": "0520fb9dbb58c1ea",
        "mydb": "7b1f540ae7b80b30",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "db",
        "x": 630,
        "y": 100,
        "wires": [
            [
                "c51bd72292a110d5"
            ]
        ]
    },
    {
        "id": "c51bd72292a110d5",
        "type": "function",
        "z": "0520fb9dbb58c1ea",
        "name": "update-closed",
        "func": "if(msg.payload[0] != undefined) {\n    msg.topic = `UPDATE slot SET opening=false, occupied=true WHERE slotId=${msg.payload[0].slotId}`;\n} \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 100,
        "wires": [
            [
                "be5ee1e8c214ae38"
            ]
        ]
    },
    {
        "id": "be5ee1e8c214ae38",
        "type": "sqlite",
        "z": "0520fb9dbb58c1ea",
        "mydb": "7b1f540ae7b80b30",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "db",
        "x": 950,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "fd4b1f2f53dd47c9",
        "type": "mqtt out",
        "z": "ad490413aec60dd0",
        "name": "",
        "topic": "ku_states",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fbde230d2e3fc73",
        "x": 520,
        "y": 240,
        "wires": []
    },
    {
        "id": "769610c351dfe2fc",
        "type": "sqlite",
        "z": "ad490413aec60dd0",
        "mydb": "7b1f540ae7b80b30",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM slot",
        "name": "db",
        "x": 370,
        "y": 240,
        "wires": [
            [
                "fd4b1f2f53dd47c9"
            ]
        ]
    },
    {
        "id": "0a822baff6c47d27",
        "type": "mqtt out",
        "z": "fee7dc34ed95daa4",
        "name": "",
        "topic": "dispensing",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fbde230d2e3fc73",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "47bdedff0bc786a8",
        "type": "mqtt out",
        "z": "fee7dc34ed95daa4",
        "name": "",
        "topic": "unlocking",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fbde230d2e3fc73",
        "x": 960,
        "y": 340,
        "wires": []
    },
    {
        "id": "0e133d57886a51b7",
        "type": "trigger",
        "z": "fee7dc34ed95daa4",
        "name": "check-interval",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "31",
        "bytopic": "all",
        "topic": "payload.state",
        "outputs": 1,
        "x": 560,
        "y": 260,
        "wires": [
            [
                "0a822baff6c47d27"
            ]
        ]
    },
    {
        "id": "d677331d8cd23133",
        "type": "trigger",
        "z": "fee7dc34ed95daa4",
        "name": "check-interval",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "31",
        "bytopic": "all",
        "topic": "payload.state",
        "outputs": 1,
        "x": 560,
        "y": 340,
        "wires": [
            [
                "47bdedff0bc786a8"
            ]
        ]
    },
    {
        "id": "923ce151de87104b",
        "type": "function",
        "z": "fee7dc34ed95daa4",
        "name": "PS",
        "func": "msg.payload = {\n    ...msg.payload,\n    dispensing: true,\n    unlocking: false,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 240,
        "wires": [
            [
                "0e133d57886a51b7"
            ]
        ],
        "info": "# Zero State Pusher [PS]\n\nDispensing state trigger by push the 0 to the Interval node\nthat will keeep push the dispensing state every second until received\nclose indicator which is 7"
    },
    {
        "id": "16b970ed6b06a6f5",
        "type": "function",
        "z": "fee7dc34ed95daa4",
        "name": "PS",
        "func": "msg.payload = {\n    ...msg.payload,\n    unlocking: true,\n    dispensing:false\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 360,
        "wires": [
            [
                "d677331d8cd23133"
            ]
        ],
        "info": "# Zero State Pusher [PS]\n\nUnlocking state trigger by push the 0 to the Interval node\nthat will keeep push the unlocking state every second until received\nclose indicator which is 7"
    },
    {
        "id": "3db3c3d87c0f53a4",
        "type": "change",
        "z": "fee7dc34ed95daa4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 300,
        "wires": [
            [
                "0e133d57886a51b7",
                "d677331d8cd23133"
            ]
        ]
    },
    {
        "id": "66dc4fdece9e1801",
        "type": "mqtt out",
        "z": "fee7dc34ed95daa4",
        "name": "",
        "topic": "dispensing-reset",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fbde230d2e3fc73",
        "x": 1290,
        "y": 200,
        "wires": []
    },
    {
        "id": "81ce9ba878bc610b",
        "type": "mqtt in",
        "z": "fee7dc34ed95daa4",
        "name": "",
        "topic": "dispensing",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8fbde230d2e3fc73",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 960,
        "y": 200,
        "wires": [
            [
                "74700292caa3fce4"
            ]
        ]
    },
    {
        "id": "74700292caa3fce4",
        "type": "switch",
        "z": "fee7dc34ed95daa4",
        "name": "",
        "property": "$boolean([payload.occupied])\t\t",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1110,
        "y": 200,
        "wires": [
            [
                "66dc4fdece9e1801"
            ]
        ]
    },
    {
        "id": "a04b47c35908ad84",
        "type": "function",
        "z": "fee7dc34ed95daa4",
        "name": "PS",
        "func": "if(msg.payload[0] != undefined) {\n    msg.payload = {\n    ...msg.payload[0],\n    dispensing: false,\n    unlocking: false,\n    }\n    return msg;\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 300,
        "wires": [
            [
                "0a822baff6c47d27",
                "47bdedff0bc786a8"
            ]
        ],
        "info": "# Zero State Pusher [PS]\n\nDispensing state trigger by push the 0 to the Interval node\nthat will keeep push the dispensing state every second until received\nclose indicator which is 7"
    },
    {
        "id": "b0aa6540f800b82a",
        "type": "serial in",
        "z": "dba0e1f7a72441bb",
        "name": "KU16-Rx",
        "serial": "05697e61e7f516ca",
        "x": 620,
        "y": 900,
        "wires": [
            [
                "e745c37a70380ccc"
            ]
        ]
    },
    {
        "id": "aef428f8af172818",
        "type": "serial out",
        "z": "dba0e1f7a72441bb",
        "name": "KU16-Tx",
        "serial": "05697e61e7f516ca",
        "x": 1400,
        "y": 880,
        "wires": [],
        "info": "# Serial Port Comunication Endpoint\n\nตัวส่งคำสั่งออกไปที่ SerialPort"
    },
    {
        "id": "9681067d13d2b557",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "CSS",
        "func": "let checkstate = [0x02, 0x00, 0x30, 0x03, 0x35];\nmsg.payload = Buffer.from(checkstate);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 860,
        "wires": [
            [
                "aef428f8af172818"
            ]
        ]
    },
    {
        "id": "0c89576ca43efd76",
        "type": "trigger",
        "z": "dba0e1f7a72441bb",
        "name": "check-interval",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "31",
        "bytopic": "all",
        "topic": "payload.state",
        "outputs": 1,
        "x": 1040,
        "y": 840,
        "wires": [
            [
                "9681067d13d2b557"
            ]
        ]
    },
    {
        "id": "dc0f2adc6a931ab9",
        "type": "delay",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1000,
        "y": 900,
        "wires": [
            [
                "9681067d13d2b557"
            ]
        ]
    },
    {
        "id": "7d2455d65ca50e33",
        "type": "delay",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 840,
        "wires": [
            [
                "0c89576ca43efd76",
                "6280049a510a1447"
            ]
        ]
    },
    {
        "id": "faf48f17be5d850b",
        "type": "inject",
        "z": "dba0e1f7a72441bb",
        "name": "manual-tricker",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "{\"slot\":1,\"hn\":\"502034\",\"timestamp\":1694831412480}",
        "payloadType": "json",
        "x": 150,
        "y": 1300,
        "wires": [
            [
                "894b73c6790a4b54"
            ]
        ]
    },
    {
        "id": "9dc39b24f780290a",
        "type": "comment",
        "z": "dba0e1f7a72441bb",
        "name": "Slot State Documentation",
        "info": "### Slot State Documentation\n\nBit definition\n\nhigh Bit [128 64 32 16 8 4 2 1]\n\nKU16 returning package definition [3 slots connected example]\n\n1. All slots are closed\n    - `00000111` [3 slots available] and all closed\n    - output will be [7]\n\n2. Slot No. 1 open\n    - `00000110` slot number one is opening.\n    - output will be [6] (come from 0 + 2 + 4 from the logic high bit)\n3. Slot No. 2 open\n    - `00000101` slot number two is opening.\n    - output will be [5]\n4. Slot No. 3 open\n    - `00000011` slot number three is opening.\n    - output will be [3]\n\nfrom the example if all the slot is registered and available.\nthe closed data will be\n    - `11111111` so it is [1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 = 255]\nso if the slot 1 is opening there will be\n    - `11111110` so it is [1 + 2 + 4 + 8 + 16 + 32 + 64 = 127]\n\njust like that!",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "62d5fe828371d298",
        "type": "mqtt in",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "topic": "init",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8fbde230d2e3fc73",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 340,
        "wires": [
            [
                "6f50702ad1cf2d63"
            ]
        ]
    },
    {
        "id": "03e3df0c0f696618",
        "type": "sqlite",
        "z": "dba0e1f7a72441bb",
        "mydb": "7b1f540ae7b80b30",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "db",
        "x": 1190,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "d761a54a7d2f456b",
        "type": "change",
        "z": "dba0e1f7a72441bb",
        "name": "cmd-sender",
        "rules": [
            {
                "t": "move",
                "p": "payload.command",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 960,
        "wires": [
            [
                "aef428f8af172818"
            ]
        ]
    },
    {
        "id": "e9b5fbd42ec45660",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "upd-input-state",
        "func": "msg.topic = `UPDATE slot SET hn=${msg.payload.hn}, timestamp=${msg.payload.timestamp}, opening=true WHERE slotId=${msg.payload.slot}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1020,
        "wires": [
            [
                "03e3df0c0f696618"
            ]
        ]
    },
    {
        "id": "e745c37a70380ccc",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "state-parser",
        "func": "let slotStates = msg.payload[3];\nmsg.payload = slotStates;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 900,
        "wires": [
            [
                "7d2455d65ca50e33"
            ]
        ]
    },
    {
        "id": "e8523811e1cffe4e",
        "type": "inject",
        "z": "dba0e1f7a72441bb",
        "name": "reset-slots-table",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reset",
        "payload": "5",
        "payloadType": "str",
        "x": 160,
        "y": 1640,
        "wires": [
            [
                "b056f41e2f998161"
            ]
        ]
    },
    {
        "id": "f12c16727ec2e953",
        "type": "inject",
        "z": "dba0e1f7a72441bb",
        "name": "findall-logs",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM slot;",
        "x": 120,
        "y": 1780,
        "wires": [
            [
                "fd7a5e60691ce357"
            ]
        ]
    },
    {
        "id": "cbbb6b3383a1dda5",
        "type": "mqtt in",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "topic": "reset",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8fbde230d2e3fc73",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 400,
        "wires": [
            [
                "94b4911343997b15"
            ]
        ]
    },
    {
        "id": "94b4911343997b15",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "reset-data",
        "func": "msg.topic = `UPDATE slot SET hn=\"\", opening=false, occupied=false WHERE slotId=${msg.payload.slot}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 400,
        "wires": [
            [
                "ee366a1f7ed7e268"
            ]
        ]
    },
    {
        "id": "878d60410858a501",
        "type": "mqtt in",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "topic": "dispense",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8fbde230d2e3fc73",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 220,
        "wires": [
            [
                "f28ae21b9158e57e",
                "dd8a575ffc03918f"
            ]
        ],
        "info": "# MQTT - Dispensing INPUT\n\nSubscribe to the publisher for the \"dispense\" mqtt-topic\n\npayload structure\n\n`\npayload: {\n    slot: number,\n    hn: string,\n    timestamp: number\n}\n`"
    },
    {
        "id": "128d321c62d83210",
        "type": "mqtt out",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "topic": "dispensing",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fbde230d2e3fc73",
        "x": 2310,
        "y": 520,
        "wires": []
    },
    {
        "id": "bfc6ad71abf096bb",
        "type": "mqtt out",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "topic": "unlocking",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fbde230d2e3fc73",
        "x": 2300,
        "y": 600,
        "wires": []
    },
    {
        "id": "2fa1eb2d4d11f974",
        "type": "trigger",
        "z": "dba0e1f7a72441bb",
        "name": "check-interval",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "31",
        "bytopic": "all",
        "topic": "payload.state",
        "outputs": 1,
        "x": 1900,
        "y": 520,
        "wires": [
            [
                "128d321c62d83210"
            ]
        ]
    },
    {
        "id": "884a7b734a978f82",
        "type": "trigger",
        "z": "dba0e1f7a72441bb",
        "name": "check-interval",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "31",
        "bytopic": "all",
        "topic": "payload.state",
        "outputs": 1,
        "x": 1900,
        "y": 600,
        "wires": [
            [
                "bfc6ad71abf096bb"
            ]
        ]
    },
    {
        "id": "2d51849108386b50",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "PS",
        "func": "msg.payload = {\n    ...msg.payload,\n    dispensing: true,\n    unlocking: false,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 500,
        "wires": [
            [
                "2fa1eb2d4d11f974"
            ]
        ],
        "info": "# Zero State Pusher [PS]\n\nDispensing state trigger by push the 0 to the Interval node\nthat will keeep push the dispensing state every second until received\nclose indicator which is 7"
    },
    {
        "id": "288f649f71d72f61",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "PS",
        "func": "msg.payload = {\n    ...msg.payload,\n    unlocking: true,\n    dispensing:false\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 620,
        "wires": [
            [
                "884a7b734a978f82"
            ]
        ],
        "info": "# Zero State Pusher [PS]\n\nUnlocking state trigger by push the 0 to the Interval node\nthat will keeep push the unlocking state every second until received\nclose indicator which is 7"
    },
    {
        "id": "a5be227c41e825f2",
        "type": "mqtt in",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "topic": "unlock",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8fbde230d2e3fc73",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 280,
        "wires": [
            [
                "edca35027e4d8e57"
            ]
        ]
    },
    {
        "id": "8b74e81db129d18a",
        "type": "change",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 560,
        "wires": [
            [
                "2fa1eb2d4d11f974",
                "884a7b734a978f82"
            ]
        ]
    },
    {
        "id": "b67fcec21f9bcb66",
        "type": "mqtt out",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "topic": "dispensing-reset",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fbde230d2e3fc73",
        "x": 2630,
        "y": 460,
        "wires": []
    },
    {
        "id": "ee366a1f7ed7e268",
        "type": "sqlite",
        "z": "dba0e1f7a72441bb",
        "mydb": "7b1f540ae7b80b30",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "db",
        "x": 390,
        "y": 400,
        "wires": [
            [
                "efdad681b4495aab"
            ]
        ]
    },
    {
        "id": "5034d74a1b5a3ded",
        "type": "mqtt in",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "topic": "dispensing",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8fbde230d2e3fc73",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 2300,
        "y": 460,
        "wires": [
            [
                "28d67334796979e7"
            ]
        ]
    },
    {
        "id": "28d67334796979e7",
        "type": "switch",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "property": "$boolean([payload.occupied])\t\t",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2450,
        "y": 460,
        "wires": [
            [
                "b67fcec21f9bcb66"
            ]
        ]
    },
    {
        "id": "0d26b39b82417ba1",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "PS",
        "func": "if(msg.payload[0] != undefined) {\n    msg.payload = {\n    ...msg.payload[0],\n    dispensing: false,\n    unlocking: false,\n    }\n    return msg;\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2130,
        "y": 560,
        "wires": [
            [
                "128d321c62d83210",
                "bfc6ad71abf096bb"
            ]
        ],
        "info": "# Zero State Pusher [PS]\n\nDispensing state trigger by push the 0 to the Interval node\nthat will keeep push the dispensing state every second until received\nclose indicator which is 7"
    },
    {
        "id": "95017ff6205466fe",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "executor",
        "func": "let commands = [\n    {\n        channel: 0,\n        channelNo: 1,\n        unlock: [0x02, 0x00, 0x31, 0x03, 0x36],\n        closedStateBit: [0x07],\n        openedStateBit: [0x06],\n        byteIndex: [3],\n    },\n        {\n        channel: 1,\n        channelNo: 2,\n        unlock: [0x02, 0x01, 0x31, 0x03, 0x37],\n        openedStateBit: [0x05],\n        closedStateBit: [0x06],\n        byteIndex: [3],\n    },\n    {\n        channel: 2,\n        channelNo: 3,\n        unlock: [0x02, 0x02, 0x31, 0x03, 0x38],\n        closedStateBit: [0x03],\n        openedStateBit: [0x06],\n        byteIndex: [3],\n    },\n    {\n        channel: 3,\n        channelNo: 4,\n        unlock: [0x02, 0x03, 0x31, 0x03, 0x39],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 4,\n        channelNo: 5,\n        unlock: [0x02, 0x04, 0x31, 0x03, 0x3a],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 5,\n        channelNo: 6,\n        unlock: [0x02, 0x05, 0x31, 0x03, 0x3b],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 6,\n        channelNo: 7,\n        unlock: [0x02, 0x06, 0x31, 0x03, 0x3c],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 7,\n        channelNo: 8,\n        unlock: [0x02, 0x07, 0x31, 0x03, 0x3d],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 8,\n        channelNo: 9,\n        unlock: [0x02, 0x08, 0x31, 0x03, 0x3e],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 9,\n        channelNo: 10,\n        unlock: [0x02, 0x09, 0x31, 0x03, 0x3f],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 10,\n        channelNo: 11,\n        unlock: [0x02, 0x0a, 0x31, 0x03, 0x40],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 11,\n        channelNo: 12,\n        unlock: [0x02, 0x0b, 0x31, 0x03, 0x41],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 12,\n        channelNo: 13,\n        unlock: [0x02, 0x0c, 0x31, 0x03, 0x42],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 13,\n        channelNo: 14,\n        unlock: [0x02, 0x0d, 0x31, 0x03, 0x43],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 14,\n        channelNo: 15,\n        unlock: [0x02, 0x0e, 0x31, 0x03, 0x44],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n    {\n        channel: 15,\n        channelNo: 16,\n        unlock: [0x02, 0x0f, 0x31, 0x03, 0x45],\n        closedStateBit: 1,\n        openedStateBit: 0,\n    },\n]\n\nlet slot = commands[msg.payload.slot - 1]\nmsg.payload = { ...msg.payload, command: Buffer.from(slot.unlock) };\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 980,
        "wires": [
            [
                "d761a54a7d2f456b",
                "dc0f2adc6a931ab9",
                "e9b5fbd42ec45660"
            ]
        ],
        "info": "# Executor\n"
    },
    {
        "id": "2a981033218cfcae",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "logging",
        "func": "msg.topic = `INSERT INTO logs (id,message,timestamp) VALUES(${new Date().getTime()}, \"Reset Slot: ${msg.payload.slot} by ${msg.payload.stuffId} reason: ${msg.payload.reason}\", ${new Date().getTime().toString()});`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 460,
        "wires": [
            [
                "4f399f860fcb3356"
            ]
        ]
    },
    {
        "id": "7f2b43cd4928950e",
        "type": "mqtt in",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "topic": "force-reset",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8fbde230d2e3fc73",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 460,
        "wires": [
            [
                "94b4911343997b15",
                "2a981033218cfcae"
            ]
        ]
    },
    {
        "id": "58217a8bcd99b94f",
        "type": "inject",
        "z": "dba0e1f7a72441bb",
        "name": "findall-slots",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "find",
        "x": 140,
        "y": 1600,
        "wires": [
            [
                "b056f41e2f998161"
            ]
        ]
    },
    {
        "id": "efed87a5e716a12f",
        "type": "sqlite",
        "z": "dba0e1f7a72441bb",
        "mydb": "7b1f540ae7b80b30",
        "sqlquery": "msg.topic",
        "sql": "INSERT INTO slot(slotId, hn, timestamp) VALUES($slotId, $hn, $timestamp)",
        "name": "db",
        "x": 650,
        "y": 1660,
        "wires": [
            [
                "6421d0c7d4ad6dd0"
            ]
        ]
    },
    {
        "id": "c658a80603b47421",
        "type": "comment",
        "z": "dba0e1f7a72441bb",
        "name": "Slot Service Zone",
        "info": "",
        "x": 130,
        "y": 1460,
        "wires": []
    },
    {
        "id": "27c3627125df7335",
        "type": "inject",
        "z": "dba0e1f7a72441bb",
        "name": "findall-user",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "findall",
        "x": 140,
        "y": 1960,
        "wires": [
            [
                "f0a0d4c8f07a97e3"
            ]
        ]
    },
    {
        "id": "3ad74adfabe9a43b",
        "type": "inject",
        "z": "dba0e1f7a72441bb",
        "name": "active-user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "active",
        "payload": "",
        "payloadType": "str",
        "x": 140,
        "y": 2040,
        "wires": [
            [
                "f0a0d4c8f07a97e3"
            ]
        ]
    },
    {
        "id": "3c66a5f523e470f4",
        "type": "inject",
        "z": "dba0e1f7a72441bb",
        "name": "add-slot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "add",
        "payload": "5",
        "payloadType": "num",
        "x": 130,
        "y": 1520,
        "wires": [
            [
                "b056f41e2f998161"
            ]
        ]
    },
    {
        "id": "f1c18eee0f91fa98",
        "type": "inject",
        "z": "dba0e1f7a72441bb",
        "name": "remove-slot",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "remove",
        "payload": "1",
        "payloadType": "num",
        "x": 150,
        "y": 1560,
        "wires": [
            [
                "b056f41e2f998161"
            ]
        ]
    },
    {
        "id": "b056f41e2f998161",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "executor",
        "func": "switch(msg.topic) {\n    case \"add\": {\n        msg.topic = `INSERT INTO slot(slotId,hn,timestamp,opening,occupied) VALUES(${msg.payload},\"\",0,0,0);`\n        break;\n    }\n    case \"find\": {\n        msg.topic = `SELECT * FROM slot`;\n        break;\n    }\n    case \"remove\": {\n        msg.topic = `DELETE FROM slot WHERE slotId=${msg.payload};`;\n        break;\n    }\n    case \"reset\": {\n        msg.topic = `UPDATE slot SET hn = \"\", opening = false, occupied = false, timestamp = 0 WHERE ${msg.payload};`;\n        break;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1580,
        "wires": [
            [
                "efed87a5e716a12f"
            ]
        ]
    },
    {
        "id": "6421d0c7d4ad6dd0",
        "type": "debug",
        "z": "dba0e1f7a72441bb",
        "name": "database-logs",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1660,
        "wires": []
    },
    {
        "id": "fd7a5e60691ce357",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "executor",
        "func": "msg.topic = \"SELECT * FROM logs;\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1800,
        "wires": [
            [
                "efed87a5e716a12f"
            ]
        ]
    },
    {
        "id": "1428b4f4be308b31",
        "type": "comment",
        "z": "dba0e1f7a72441bb",
        "name": "logs Service Zone",
        "info": "",
        "x": 130,
        "y": 1700,
        "wires": []
    },
    {
        "id": "7341cef8b027a475",
        "type": "comment",
        "z": "dba0e1f7a72441bb",
        "name": "User Service Zone",
        "info": "",
        "x": 130,
        "y": 1880,
        "wires": []
    },
    {
        "id": "f0a0d4c8f07a97e3",
        "type": "function",
        "z": "dba0e1f7a72441bb",
        "name": "executor",
        "func": "switch(msg.topic) {\n    case \"add\": {\n        msg.topic = `INSERT INTO user(stuffId, role, active, created_at) VALUES(${msg.payload}, \"user\", 1, ${new Date().getTime().toString()})`;\n        break;\n    }\n    case \"findall\": {\n        msg.topic = \"SELECT * FROM user;\";\n        break;\n    }\n    case \"findbyid\": {\n        msg.topic = `SELECT * FROM user WHERE stuffId=${msg.payload};`;\n        break;\n    }\n    case \"delete\": {\n        msg.topic = `DELETE FROM user WHERE stuffId=${msg.payload};`;\n        break;\n    }\n    case \"deactive\": {\n        msg.topic = `UPDATE user SET active=0 WHERE stuffId=${msg.payload};`;\n        break;   \n    }\n    case \"active\": {\n        msg.topic = `UPDATE user SET active=1 WHERE stuffId=${msg.payload};`;\n        break;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1940,
        "wires": [
            [
                "efed87a5e716a12f"
            ]
        ]
    },
    {
        "id": "d03c3d1d0b31d8fd",
        "type": "inject",
        "z": "dba0e1f7a72441bb",
        "name": "add-user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "add",
        "payload": "1234",
        "payloadType": "str",
        "x": 140,
        "y": 1920,
        "wires": [
            [
                "f0a0d4c8f07a97e3"
            ]
        ]
    },
    {
        "id": "fdd6f6788e90f53a",
        "type": "inject",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "findbyid",
        "payload": "1234",
        "payloadType": "str",
        "x": 150,
        "y": 2000,
        "wires": [
            [
                "f0a0d4c8f07a97e3"
            ]
        ]
    },
    {
        "id": "8a335431fae78006",
        "type": "inject",
        "z": "dba0e1f7a72441bb",
        "name": "deactive-user",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "deactive",
        "payload": "",
        "payloadType": "str",
        "x": 150,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "dc7f15e65a4b0d80",
        "type": "comment",
        "z": "dba0e1f7a72441bb",
        "name": "Manual Service Zone",
        "info": "",
        "x": 140,
        "y": 1240,
        "wires": []
    },
    {
        "id": "7785dbe9fac4b32e",
        "type": "mqtt in",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "topic": "get_logs",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "8fbde230d2e3fc73",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 520,
        "wires": [
            [
                "d110a26ed6c87a7d"
            ]
        ]
    },
    {
        "id": "d110a26ed6c87a7d",
        "type": "sqlite",
        "z": "dba0e1f7a72441bb",
        "mydb": "7b1f540ae7b80b30",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM logs",
        "name": "db",
        "x": 270,
        "y": 520,
        "wires": [
            [
                "fbc91b7b566b72f1",
                "f1ed3cdb7ce5e97d"
            ]
        ]
    },
    {
        "id": "fbc91b7b566b72f1",
        "type": "mqtt out",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "topic": "retrive_logs",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8fbde230d2e3fc73",
        "x": 430,
        "y": 520,
        "wires": []
    },
    {
        "id": "0f37d617d5968a0d",
        "type": "link in",
        "z": "dba0e1f7a72441bb",
        "name": "dispensing-state-controller",
        "links": [
            "f28ae21b9158e57e"
        ],
        "x": 1475,
        "y": 500,
        "wires": [
            [
                "2d51849108386b50"
            ]
        ]
    },
    {
        "id": "f28ae21b9158e57e",
        "type": "link out",
        "z": "dba0e1f7a72441bb",
        "name": "dispensing-in",
        "mode": "link",
        "links": [
            "0f37d617d5968a0d"
        ],
        "x": 285,
        "y": 160,
        "wires": []
    },
    {
        "id": "03c4e563c8df09f5",
        "type": "link in",
        "z": "dba0e1f7a72441bb",
        "name": "unlocking-state-controller",
        "links": [
            "edca35027e4d8e57",
            "894b73c6790a4b54"
        ],
        "x": 1475,
        "y": 620,
        "wires": [
            [
                "288f649f71d72f61"
            ]
        ]
    },
    {
        "id": "edca35027e4d8e57",
        "type": "link out",
        "z": "dba0e1f7a72441bb",
        "name": "unlock-in",
        "mode": "link",
        "links": [
            "03c4e563c8df09f5",
            "05ad8e3bae75a4b1"
        ],
        "x": 195,
        "y": 280,
        "wires": []
    },
    {
        "id": "dd8a575ffc03918f",
        "type": "subflow:931cf19a33392f64",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "x": 290,
        "y": 220,
        "wires": [
            [
                "2cb536267ae60cbe"
            ]
        ]
    },
    {
        "id": "05ad8e3bae75a4b1",
        "type": "link in",
        "z": "dba0e1f7a72441bb",
        "name": "executor-controller",
        "links": [
            "2cb536267ae60cbe",
            "edca35027e4d8e57",
            "894b73c6790a4b54"
        ],
        "x": 695,
        "y": 980,
        "wires": [
            [
                "95017ff6205466fe"
            ]
        ]
    },
    {
        "id": "2cb536267ae60cbe",
        "type": "link out",
        "z": "dba0e1f7a72441bb",
        "name": "dispense-in",
        "mode": "link",
        "links": [
            "05ad8e3bae75a4b1"
        ],
        "x": 455,
        "y": 220,
        "wires": []
    },
    {
        "id": "7fe9184ae38f8c1d",
        "type": "link in",
        "z": "dba0e1f7a72441bb",
        "name": "check-state-controller",
        "links": [
            "6f50702ad1cf2d63",
            "efdad681b4495aab"
        ],
        "x": 1125,
        "y": 780,
        "wires": [
            [
                "9681067d13d2b557"
            ]
        ]
    },
    {
        "id": "6f50702ad1cf2d63",
        "type": "link out",
        "z": "dba0e1f7a72441bb",
        "name": "init-in",
        "mode": "link",
        "links": [
            "7fe9184ae38f8c1d"
        ],
        "x": 195,
        "y": 340,
        "wires": []
    },
    {
        "id": "efdad681b4495aab",
        "type": "link out",
        "z": "dba0e1f7a72441bb",
        "name": "reset-in",
        "mode": "link",
        "links": [
            "7fe9184ae38f8c1d"
        ],
        "x": 485,
        "y": 400,
        "wires": []
    },
    {
        "id": "4f399f860fcb3356",
        "type": "sqlite",
        "z": "dba0e1f7a72441bb",
        "mydb": "7b1f540ae7b80b30",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "db",
        "x": 410,
        "y": 460,
        "wires": [
            [
                "d110a26ed6c87a7d"
            ]
        ]
    },
    {
        "id": "f9c2e62317507080",
        "type": "comment",
        "z": "dba0e1f7a72441bb",
        "name": "MQTT - IN Zone",
        "info": "",
        "x": 120,
        "y": 160,
        "wires": []
    },
    {
        "id": "894b73c6790a4b54",
        "type": "link out",
        "z": "dba0e1f7a72441bb",
        "name": "manual-in-1",
        "mode": "link",
        "links": [
            "03c4e563c8df09f5",
            "05ad8e3bae75a4b1"
        ],
        "x": 295,
        "y": 1300,
        "wires": []
    },
    {
        "id": "3c6ec80566610587",
        "type": "subflow:ad490413aec60dd0",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "x": 1370,
        "y": 720,
        "wires": []
    },
    {
        "id": "6280049a510a1447",
        "type": "subflow:0520fb9dbb58c1ea",
        "z": "dba0e1f7a72441bb",
        "name": "",
        "x": 1090,
        "y": 680,
        "wires": [
            [
                "8b74e81db129d18a"
            ],
            [
                "0d26b39b82417ba1"
            ],
            [
                "3c6ec80566610587"
            ]
        ]
    },
    {
        "id": "097594fafa51f9e0",
        "type": "comment",
        "z": "dba0e1f7a72441bb",
        "name": "Locking/Dispensing Zone",
        "info": "",
        "x": 1570,
        "y": 460,
        "wires": []
    },
    {
        "id": "d5062a9c3441a675",
        "type": "comment",
        "z": "dba0e1f7a72441bb",
        "name": "KU-16 Core Module",
        "info": "",
        "x": 650,
        "y": 840,
        "wires": []
    },
    {
        "id": "f1ed3cdb7ce5e97d",
        "type": "debug",
        "z": "dba0e1f7a72441bb",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 600,
        "wires": []
    }
]